/*
 * This file is generated by jOOQ.
 */
package histopatologialab.core.db.tables.records;


import histopatologialab.core.db.tables.LabExamenDiagnostico;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LabExamenDiagnosticoRecord extends UpdatableRecordImpl<LabExamenDiagnosticoRecord> implements Record8<Integer, Integer, Integer, Integer, LocalDate, Integer, LocalDate, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.lab_examen_diagnostico.cod_examen</code>.
     */
    public void setCodExamen(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.lab_examen_diagnostico.cod_examen</code>.
     */
    public Integer getCodExamen() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.lab_examen_diagnostico.cod_diagnostico</code>.
     */
    public void setCodDiagnostico(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.lab_examen_diagnostico.cod_diagnostico</code>.
     */
    public Integer getCodDiagnostico() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.lab_examen_diagnostico.indice_diagnostico</code>.
     */
    public void setIndiceDiagnostico(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.lab_examen_diagnostico.indice_diagnostico</code>.
     */
    public Integer getIndiceDiagnostico() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.lab_examen_diagnostico.tipo_diagnostico</code>.
     */
    public void setTipoDiagnostico(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.lab_examen_diagnostico.tipo_diagnostico</code>.
     */
    public Integer getTipoDiagnostico() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.lab_examen_diagnostico.fecha_creacion</code>.
     */
    public void setFechaCreacion(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.lab_examen_diagnostico.fecha_creacion</code>.
     */
    public LocalDate getFechaCreacion() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>public.lab_examen_diagnostico.creado_por</code>.
     */
    public void setCreadoPor(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.lab_examen_diagnostico.creado_por</code>.
     */
    public Integer getCreadoPor() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.lab_examen_diagnostico.fecha_modificacion</code>.
     */
    public void setFechaModificacion(LocalDate value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.lab_examen_diagnostico.fecha_modificacion</code>.
     */
    public LocalDate getFechaModificacion() {
        return (LocalDate) get(6);
    }

    /**
     * Setter for <code>public.lab_examen_diagnostico.modificado_por</code>.
     */
    public void setModificadoPor(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.lab_examen_diagnostico.modificado_por</code>.
     */
    public String getModificadoPor() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, Integer, Integer, LocalDate, Integer, LocalDate, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Integer, Integer, Integer, LocalDate, Integer, LocalDate, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return LabExamenDiagnostico.LAB_EXAMEN_DIAGNOSTICO.COD_EXAMEN;
    }

    @Override
    public Field<Integer> field2() {
        return LabExamenDiagnostico.LAB_EXAMEN_DIAGNOSTICO.COD_DIAGNOSTICO;
    }

    @Override
    public Field<Integer> field3() {
        return LabExamenDiagnostico.LAB_EXAMEN_DIAGNOSTICO.INDICE_DIAGNOSTICO;
    }

    @Override
    public Field<Integer> field4() {
        return LabExamenDiagnostico.LAB_EXAMEN_DIAGNOSTICO.TIPO_DIAGNOSTICO;
    }

    @Override
    public Field<LocalDate> field5() {
        return LabExamenDiagnostico.LAB_EXAMEN_DIAGNOSTICO.FECHA_CREACION;
    }

    @Override
    public Field<Integer> field6() {
        return LabExamenDiagnostico.LAB_EXAMEN_DIAGNOSTICO.CREADO_POR;
    }

    @Override
    public Field<LocalDate> field7() {
        return LabExamenDiagnostico.LAB_EXAMEN_DIAGNOSTICO.FECHA_MODIFICACION;
    }

    @Override
    public Field<String> field8() {
        return LabExamenDiagnostico.LAB_EXAMEN_DIAGNOSTICO.MODIFICADO_POR;
    }

    @Override
    public Integer component1() {
        return getCodExamen();
    }

    @Override
    public Integer component2() {
        return getCodDiagnostico();
    }

    @Override
    public Integer component3() {
        return getIndiceDiagnostico();
    }

    @Override
    public Integer component4() {
        return getTipoDiagnostico();
    }

    @Override
    public LocalDate component5() {
        return getFechaCreacion();
    }

    @Override
    public Integer component6() {
        return getCreadoPor();
    }

    @Override
    public LocalDate component7() {
        return getFechaModificacion();
    }

    @Override
    public String component8() {
        return getModificadoPor();
    }

    @Override
    public Integer value1() {
        return getCodExamen();
    }

    @Override
    public Integer value2() {
        return getCodDiagnostico();
    }

    @Override
    public Integer value3() {
        return getIndiceDiagnostico();
    }

    @Override
    public Integer value4() {
        return getTipoDiagnostico();
    }

    @Override
    public LocalDate value5() {
        return getFechaCreacion();
    }

    @Override
    public Integer value6() {
        return getCreadoPor();
    }

    @Override
    public LocalDate value7() {
        return getFechaModificacion();
    }

    @Override
    public String value8() {
        return getModificadoPor();
    }

    @Override
    public LabExamenDiagnosticoRecord value1(Integer value) {
        setCodExamen(value);
        return this;
    }

    @Override
    public LabExamenDiagnosticoRecord value2(Integer value) {
        setCodDiagnostico(value);
        return this;
    }

    @Override
    public LabExamenDiagnosticoRecord value3(Integer value) {
        setIndiceDiagnostico(value);
        return this;
    }

    @Override
    public LabExamenDiagnosticoRecord value4(Integer value) {
        setTipoDiagnostico(value);
        return this;
    }

    @Override
    public LabExamenDiagnosticoRecord value5(LocalDate value) {
        setFechaCreacion(value);
        return this;
    }

    @Override
    public LabExamenDiagnosticoRecord value6(Integer value) {
        setCreadoPor(value);
        return this;
    }

    @Override
    public LabExamenDiagnosticoRecord value7(LocalDate value) {
        setFechaModificacion(value);
        return this;
    }

    @Override
    public LabExamenDiagnosticoRecord value8(String value) {
        setModificadoPor(value);
        return this;
    }

    @Override
    public LabExamenDiagnosticoRecord values(Integer value1, Integer value2, Integer value3, Integer value4, LocalDate value5, Integer value6, LocalDate value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LabExamenDiagnosticoRecord
     */
    public LabExamenDiagnosticoRecord() {
        super(LabExamenDiagnostico.LAB_EXAMEN_DIAGNOSTICO);
    }

    /**
     * Create a detached, initialised LabExamenDiagnosticoRecord
     */
    public LabExamenDiagnosticoRecord(Integer codExamen, Integer codDiagnostico, Integer indiceDiagnostico, Integer tipoDiagnostico, LocalDate fechaCreacion, Integer creadoPor, LocalDate fechaModificacion, String modificadoPor) {
        super(LabExamenDiagnostico.LAB_EXAMEN_DIAGNOSTICO);

        setCodExamen(codExamen);
        setCodDiagnostico(codDiagnostico);
        setIndiceDiagnostico(indiceDiagnostico);
        setTipoDiagnostico(tipoDiagnostico);
        setFechaCreacion(fechaCreacion);
        setCreadoPor(creadoPor);
        setFechaModificacion(fechaModificacion);
        setModificadoPor(modificadoPor);
    }
}
