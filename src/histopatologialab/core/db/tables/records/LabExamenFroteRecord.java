/*
 * This file is generated by jOOQ.
 */
package histopatologialab.core.db.tables.records;


import histopatologialab.core.db.tables.LabExamenFrote;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LabExamenFroteRecord extends UpdatableRecordImpl<LabExamenFroteRecord> implements Record8<Integer, String, Integer, Integer, String, Integer, String, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.lab_examen_frote.cod_examen</code>.
     */
    public void setCodExamen(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.lab_examen_frote.cod_examen</code>.
     */
    public Integer getCodExamen() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.lab_examen_frote.num_frote</code>.
     */
    public void setNumFrote(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.lab_examen_frote.num_frote</code>.
     */
    public String getNumFrote() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.lab_examen_frote.num_biopsia</code>.
     */
    public void setNumBiopsia(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.lab_examen_frote.num_biopsia</code>.
     */
    public Integer getNumBiopsia() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.lab_examen_frote.cod_tincion</code>.
     */
    public void setCodTincion(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.lab_examen_frote.cod_tincion</code>.
     */
    public Integer getCodTincion() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.lab_examen_frote.estado_frote</code>.
     */
    public void setEstadoFrote(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.lab_examen_frote.estado_frote</code>.
     */
    public String getEstadoFrote() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.lab_examen_frote.usuario_frote</code>.
     */
    public void setUsuarioFrote(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.lab_examen_frote.usuario_frote</code>.
     */
    public Integer getUsuarioFrote() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.lab_examen_frote.modificado_por</code>.
     */
    public void setModificadoPor(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.lab_examen_frote.modificado_por</code>.
     */
    public String getModificadoPor() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.lab_examen_frote.fecha_modificacion</code>.
     */
    public void setFechaModificacion(LocalDate value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.lab_examen_frote.fecha_modificacion</code>.
     */
    public LocalDate getFechaModificacion() {
        return (LocalDate) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, Integer, Integer, String, Integer, String, LocalDate> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, Integer, Integer, String, Integer, String, LocalDate> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return LabExamenFrote.LAB_EXAMEN_FROTE.COD_EXAMEN;
    }

    @Override
    public Field<String> field2() {
        return LabExamenFrote.LAB_EXAMEN_FROTE.NUM_FROTE;
    }

    @Override
    public Field<Integer> field3() {
        return LabExamenFrote.LAB_EXAMEN_FROTE.NUM_BIOPSIA;
    }

    @Override
    public Field<Integer> field4() {
        return LabExamenFrote.LAB_EXAMEN_FROTE.COD_TINCION;
    }

    @Override
    public Field<String> field5() {
        return LabExamenFrote.LAB_EXAMEN_FROTE.ESTADO_FROTE;
    }

    @Override
    public Field<Integer> field6() {
        return LabExamenFrote.LAB_EXAMEN_FROTE.USUARIO_FROTE;
    }

    @Override
    public Field<String> field7() {
        return LabExamenFrote.LAB_EXAMEN_FROTE.MODIFICADO_POR;
    }

    @Override
    public Field<LocalDate> field8() {
        return LabExamenFrote.LAB_EXAMEN_FROTE.FECHA_MODIFICACION;
    }

    @Override
    public Integer component1() {
        return getCodExamen();
    }

    @Override
    public String component2() {
        return getNumFrote();
    }

    @Override
    public Integer component3() {
        return getNumBiopsia();
    }

    @Override
    public Integer component4() {
        return getCodTincion();
    }

    @Override
    public String component5() {
        return getEstadoFrote();
    }

    @Override
    public Integer component6() {
        return getUsuarioFrote();
    }

    @Override
    public String component7() {
        return getModificadoPor();
    }

    @Override
    public LocalDate component8() {
        return getFechaModificacion();
    }

    @Override
    public Integer value1() {
        return getCodExamen();
    }

    @Override
    public String value2() {
        return getNumFrote();
    }

    @Override
    public Integer value3() {
        return getNumBiopsia();
    }

    @Override
    public Integer value4() {
        return getCodTincion();
    }

    @Override
    public String value5() {
        return getEstadoFrote();
    }

    @Override
    public Integer value6() {
        return getUsuarioFrote();
    }

    @Override
    public String value7() {
        return getModificadoPor();
    }

    @Override
    public LocalDate value8() {
        return getFechaModificacion();
    }

    @Override
    public LabExamenFroteRecord value1(Integer value) {
        setCodExamen(value);
        return this;
    }

    @Override
    public LabExamenFroteRecord value2(String value) {
        setNumFrote(value);
        return this;
    }

    @Override
    public LabExamenFroteRecord value3(Integer value) {
        setNumBiopsia(value);
        return this;
    }

    @Override
    public LabExamenFroteRecord value4(Integer value) {
        setCodTincion(value);
        return this;
    }

    @Override
    public LabExamenFroteRecord value5(String value) {
        setEstadoFrote(value);
        return this;
    }

    @Override
    public LabExamenFroteRecord value6(Integer value) {
        setUsuarioFrote(value);
        return this;
    }

    @Override
    public LabExamenFroteRecord value7(String value) {
        setModificadoPor(value);
        return this;
    }

    @Override
    public LabExamenFroteRecord value8(LocalDate value) {
        setFechaModificacion(value);
        return this;
    }

    @Override
    public LabExamenFroteRecord values(Integer value1, String value2, Integer value3, Integer value4, String value5, Integer value6, String value7, LocalDate value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LabExamenFroteRecord
     */
    public LabExamenFroteRecord() {
        super(LabExamenFrote.LAB_EXAMEN_FROTE);
    }

    /**
     * Create a detached, initialised LabExamenFroteRecord
     */
    public LabExamenFroteRecord(Integer codExamen, String numFrote, Integer numBiopsia, Integer codTincion, String estadoFrote, Integer usuarioFrote, String modificadoPor, LocalDate fechaModificacion) {
        super(LabExamenFrote.LAB_EXAMEN_FROTE);

        setCodExamen(codExamen);
        setNumFrote(numFrote);
        setNumBiopsia(numBiopsia);
        setCodTincion(codTincion);
        setEstadoFrote(estadoFrote);
        setUsuarioFrote(usuarioFrote);
        setModificadoPor(modificadoPor);
        setFechaModificacion(fechaModificacion);
    }
}
