/*
 * This file is generated by jOOQ.
 */
package histopatologialab.core.db.tables.records;


import histopatologialab.core.db.tables.LabInforme;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LabInformeRecord extends UpdatableRecordImpl<LabInformeRecord> implements Record13<Integer, LocalDate, String, String, String, String, String, String, Integer, Integer, Integer, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.lab_informe.cod_informe</code>.
     */
    public void setCodInforme(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.lab_informe.cod_informe</code>.
     */
    public Integer getCodInforme() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.lab_informe.fecha_informe</code>.
     */
    public void setFechaInforme(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.lab_informe.fecha_informe</code>.
     */
    public LocalDate getFechaInforme() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>public.lab_informe.clinica</code>.
     */
    public void setClinica(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.lab_informe.clinica</code>.
     */
    public String getClinica() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.lab_informe.direccion</code>.
     */
    public void setDireccion(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.lab_informe.direccion</code>.
     */
    public String getDireccion() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.lab_informe.solicitante</code>.
     */
    public void setSolicitante(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.lab_informe.solicitante</code>.
     */
    public String getSolicitante() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.lab_informe.datos_clinicos</code>.
     */
    public void setDatosClinicos(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.lab_informe.datos_clinicos</code>.
     */
    public String getDatosClinicos() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.lab_informe.desc_macros</code>.
     */
    public void setDescMacros(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.lab_informe.desc_macros</code>.
     */
    public String getDescMacros() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.lab_informe.desc_mirco</code>.
     */
    public void setDescMirco(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.lab_informe.desc_mirco</code>.
     */
    public String getDescMirco() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.lab_informe.diagnostico</code>.
     */
    public void setDiagnostico(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.lab_informe.diagnostico</code>.
     */
    public Integer getDiagnostico() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.lab_informe.usuario_informe</code>.
     */
    public void setUsuarioInforme(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.lab_informe.usuario_informe</code>.
     */
    public Integer getUsuarioInforme() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>public.lab_informe.cod_frote</code>.
     */
    public void setCodFrote(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.lab_informe.cod_frote</code>.
     */
    public Integer getCodFrote() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>public.lab_informe.cod_biopsia</code>.
     */
    public void setCodBiopsia(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.lab_informe.cod_biopsia</code>.
     */
    public Integer getCodBiopsia() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>public.lab_informe.observaciones</code>.
     */
    public void setObservaciones(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.lab_informe.observaciones</code>.
     */
    public String getObservaciones() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, LocalDate, String, String, String, String, String, String, Integer, Integer, Integer, Integer, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Integer, LocalDate, String, String, String, String, String, String, Integer, Integer, Integer, Integer, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return LabInforme.LAB_INFORME.COD_INFORME;
    }

    @Override
    public Field<LocalDate> field2() {
        return LabInforme.LAB_INFORME.FECHA_INFORME;
    }

    @Override
    public Field<String> field3() {
        return LabInforme.LAB_INFORME.CLINICA;
    }

    @Override
    public Field<String> field4() {
        return LabInforme.LAB_INFORME.DIRECCION;
    }

    @Override
    public Field<String> field5() {
        return LabInforme.LAB_INFORME.SOLICITANTE;
    }

    @Override
    public Field<String> field6() {
        return LabInforme.LAB_INFORME.DATOS_CLINICOS;
    }

    @Override
    public Field<String> field7() {
        return LabInforme.LAB_INFORME.DESC_MACROS;
    }

    @Override
    public Field<String> field8() {
        return LabInforme.LAB_INFORME.DESC_MIRCO;
    }

    @Override
    public Field<Integer> field9() {
        return LabInforme.LAB_INFORME.DIAGNOSTICO;
    }

    @Override
    public Field<Integer> field10() {
        return LabInforme.LAB_INFORME.USUARIO_INFORME;
    }

    @Override
    public Field<Integer> field11() {
        return LabInforme.LAB_INFORME.COD_FROTE;
    }

    @Override
    public Field<Integer> field12() {
        return LabInforme.LAB_INFORME.COD_BIOPSIA;
    }

    @Override
    public Field<String> field13() {
        return LabInforme.LAB_INFORME.OBSERVACIONES;
    }

    @Override
    public Integer component1() {
        return getCodInforme();
    }

    @Override
    public LocalDate component2() {
        return getFechaInforme();
    }

    @Override
    public String component3() {
        return getClinica();
    }

    @Override
    public String component4() {
        return getDireccion();
    }

    @Override
    public String component5() {
        return getSolicitante();
    }

    @Override
    public String component6() {
        return getDatosClinicos();
    }

    @Override
    public String component7() {
        return getDescMacros();
    }

    @Override
    public String component8() {
        return getDescMirco();
    }

    @Override
    public Integer component9() {
        return getDiagnostico();
    }

    @Override
    public Integer component10() {
        return getUsuarioInforme();
    }

    @Override
    public Integer component11() {
        return getCodFrote();
    }

    @Override
    public Integer component12() {
        return getCodBiopsia();
    }

    @Override
    public String component13() {
        return getObservaciones();
    }

    @Override
    public Integer value1() {
        return getCodInforme();
    }

    @Override
    public LocalDate value2() {
        return getFechaInforme();
    }

    @Override
    public String value3() {
        return getClinica();
    }

    @Override
    public String value4() {
        return getDireccion();
    }

    @Override
    public String value5() {
        return getSolicitante();
    }

    @Override
    public String value6() {
        return getDatosClinicos();
    }

    @Override
    public String value7() {
        return getDescMacros();
    }

    @Override
    public String value8() {
        return getDescMirco();
    }

    @Override
    public Integer value9() {
        return getDiagnostico();
    }

    @Override
    public Integer value10() {
        return getUsuarioInforme();
    }

    @Override
    public Integer value11() {
        return getCodFrote();
    }

    @Override
    public Integer value12() {
        return getCodBiopsia();
    }

    @Override
    public String value13() {
        return getObservaciones();
    }

    @Override
    public LabInformeRecord value1(Integer value) {
        setCodInforme(value);
        return this;
    }

    @Override
    public LabInformeRecord value2(LocalDate value) {
        setFechaInforme(value);
        return this;
    }

    @Override
    public LabInformeRecord value3(String value) {
        setClinica(value);
        return this;
    }

    @Override
    public LabInformeRecord value4(String value) {
        setDireccion(value);
        return this;
    }

    @Override
    public LabInformeRecord value5(String value) {
        setSolicitante(value);
        return this;
    }

    @Override
    public LabInformeRecord value6(String value) {
        setDatosClinicos(value);
        return this;
    }

    @Override
    public LabInformeRecord value7(String value) {
        setDescMacros(value);
        return this;
    }

    @Override
    public LabInformeRecord value8(String value) {
        setDescMirco(value);
        return this;
    }

    @Override
    public LabInformeRecord value9(Integer value) {
        setDiagnostico(value);
        return this;
    }

    @Override
    public LabInformeRecord value10(Integer value) {
        setUsuarioInforme(value);
        return this;
    }

    @Override
    public LabInformeRecord value11(Integer value) {
        setCodFrote(value);
        return this;
    }

    @Override
    public LabInformeRecord value12(Integer value) {
        setCodBiopsia(value);
        return this;
    }

    @Override
    public LabInformeRecord value13(String value) {
        setObservaciones(value);
        return this;
    }

    @Override
    public LabInformeRecord values(Integer value1, LocalDate value2, String value3, String value4, String value5, String value6, String value7, String value8, Integer value9, Integer value10, Integer value11, Integer value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LabInformeRecord
     */
    public LabInformeRecord() {
        super(LabInforme.LAB_INFORME);
    }

    /**
     * Create a detached, initialised LabInformeRecord
     */
    public LabInformeRecord(Integer codInforme, LocalDate fechaInforme, String clinica, String direccion, String solicitante, String datosClinicos, String descMacros, String descMirco, Integer diagnostico, Integer usuarioInforme, Integer codFrote, Integer codBiopsia, String observaciones) {
        super(LabInforme.LAB_INFORME);

        setCodInforme(codInforme);
        setFechaInforme(fechaInforme);
        setClinica(clinica);
        setDireccion(direccion);
        setSolicitante(solicitante);
        setDatosClinicos(datosClinicos);
        setDescMacros(descMacros);
        setDescMirco(descMirco);
        setDiagnostico(diagnostico);
        setUsuarioInforme(usuarioInforme);
        setCodFrote(codFrote);
        setCodBiopsia(codBiopsia);
        setObservaciones(observaciones);
    }
}
