/*
 * This file is generated by jOOQ.
 */
package histopatologialab.core.db.tables;


import histopatologialab.core.db.Public;
import histopatologialab.core.db.tables.records.LabEnfsistemicaListarRecord;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LabEnfsistemicaListar extends TableImpl<LabEnfsistemicaListarRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.lab_enfsistemica_listar</code>
     */
    public static final LabEnfsistemicaListar LAB_ENFSISTEMICA_LISTAR = new LabEnfsistemicaListar();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LabEnfsistemicaListarRecord> getRecordType() {
        return LabEnfsistemicaListarRecord.class;
    }

    /**
     * The column <code>public.lab_enfsistemica_listar.b_enfsistemica</code>.
     */
    public final TableField<LabEnfsistemicaListarRecord, Integer> B_ENFSISTEMICA = createField(DSL.name("b_enfsistemica"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.lab_enfsistemica_listar.b_nomenfermedad</code>.
     */
    public final TableField<LabEnfsistemicaListarRecord, String> B_NOMENFERMEDAD = createField(DSL.name("b_nomenfermedad"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.lab_enfsistemica_listar.b_estatus_enfermedad</code>.
     */
    public final TableField<LabEnfsistemicaListarRecord, String> B_ESTATUS_ENFERMEDAD = createField(DSL.name("b_estatus_enfermedad"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.lab_enfsistemica_listar.b_creadopor</code>.
     */
    public final TableField<LabEnfsistemicaListarRecord, String> B_CREADOPOR = createField(DSL.name("b_creadopor"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.lab_enfsistemica_listar.b_fechacreacion</code>.
     */
    public final TableField<LabEnfsistemicaListarRecord, LocalDate> B_FECHACREACION = createField(DSL.name("b_fechacreacion"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>public.lab_enfsistemica_listar.b_modificadopor</code>.
     */
    public final TableField<LabEnfsistemicaListarRecord, String> B_MODIFICADOPOR = createField(DSL.name("b_modificadopor"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.lab_enfsistemica_listar.b_fecha_modif</code>.
     */
    public final TableField<LabEnfsistemicaListarRecord, LocalDate> B_FECHA_MODIF = createField(DSL.name("b_fecha_modif"), SQLDataType.LOCALDATE, this, "");

    private LabEnfsistemicaListar(Name alias, Table<LabEnfsistemicaListarRecord> aliased) {
        this(alias, aliased, new Field[0]);
    }

    private LabEnfsistemicaListar(Name alias, Table<LabEnfsistemicaListarRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function());
    }

    /**
     * Create an aliased <code>public.lab_enfsistemica_listar</code> table reference
     */
    public LabEnfsistemicaListar(String alias) {
        this(DSL.name(alias), LAB_ENFSISTEMICA_LISTAR);
    }

    /**
     * Create an aliased <code>public.lab_enfsistemica_listar</code> table reference
     */
    public LabEnfsistemicaListar(Name alias) {
        this(alias, LAB_ENFSISTEMICA_LISTAR);
    }

    /**
     * Create a <code>public.lab_enfsistemica_listar</code> table reference
     */
    public LabEnfsistemicaListar() {
        this(DSL.name("lab_enfsistemica_listar"), null);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public LabEnfsistemicaListar as(String alias) {
        return new LabEnfsistemicaListar(DSL.name(alias), this, parameters);
    }

    @Override
    public LabEnfsistemicaListar as(Name alias) {
        return new LabEnfsistemicaListar(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public LabEnfsistemicaListar rename(String name) {
        return new LabEnfsistemicaListar(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public LabEnfsistemicaListar rename(Name name) {
        return new LabEnfsistemicaListar(name, null, parameters);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, LocalDate, String, LocalDate> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * Call this table-valued function
     */
    public LabEnfsistemicaListar call() {
        LabEnfsistemicaListar result = new LabEnfsistemicaListar(DSL.name("lab_enfsistemica_listar"), null, new Field[] {});

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }
}
